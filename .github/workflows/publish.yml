# creates release tags after successful build for now.
name: Publish
on:
  workflow_dispatch:
jobs:
  job-check-artifact:
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check_artifact_exists.outputs.exists }}
    steps:
      - uses: xSAVIKx/artifact-exists-action@v0
        id: "check_artifact_exists"
        with:
          name: "my_artifact.zip"
  job-download-artifact:
    needs: job-check-artifact
    if: "${{ needs.job-check-artifact.outputs.exists == 'true'}}"
    runs-on: ubuntu-latest
    steps:
      - name: Artifact exists
        run: echo Artifact output:${{needs.job-check-artifact.outputs}}
      - name: Artifact exists
        run: echo Artifact exist:${{needs.job-check-artifact.outputs.exists}}
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: my-artifact
      - name: Unzip Artifact
        shell: bash
        run: |
          unzip -o my_artifact.zip
          rm -rf my_artifact.zip
  job-checkout:
    needs: job-check-artifact
    if: "${{ needs.job-check-artifact.outputs.exists == 'false' }}"
    runs-on: ubuntu-latest
    steps:
      - name: Artifact does not exist
        run: echo Artifact exists:${{needs.job-check-artifact.outputs.exists}}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: "./.github/actions/setup/"
  job-build:
    env:
      NODE_VERSIONS: "[19.x, 20.x]"
      OS_TYPES: "[macos-latest, ubuntu-latest]"
    strategy:
      matrix:
        node_version: [19.x, 20.x]
        os: [macos-latest, ubuntu-latest] ## not using env.OS_TYPES as env context is not available at job level.
    needs: [job-download-artifact, job-checkout]
    runs-on: ${{matrix.os}}
    if: always()
    steps:
      - name: needs jobs results
        run: |
          echo Download artifact:${{needs.job-download-artifact.result}}
          echo Job chckout:${{needs.job-checkout.result}}
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: my-artifact
      - name: Unzip Artifact
        shell: bash
        run: |
          unzip -o my_artifact.zip
          rm -rf my_artifact.zip
      - name: Build
        uses: "./.github/actions/build/"
  job-release:
    needs: job-build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    if: always()
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: my-artifact
      - name: Unzip Artifact
        shell: bash
        run: |
          unzip -o my_artifact.zip
          rm -rf my_artifact.zip
      - name: Build
        uses: "./.github/actions/build/"
      - name: Publish
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: npx semantic-release
