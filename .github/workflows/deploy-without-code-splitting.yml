# creates release tags after successful build for now.
name: CI-CD Github Actions Deploy Project
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  job-deploy-without-code-splitting:
    permissions:
      contents: write
      issues: write
      pull-requests: write
    env:
      NODE_VERSIONS: "[19.x, 20.x]"
      OS_TYPES: "[macos-latest, windows-latest]"
    strategy:
      matrix:
        node_version: [19.x, 20.x]
        os: [macos-latest, windows-latest] ## not using env.OS_TYPES as env context is not available at job level.
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout using actions/checkout@v4
        uses: actions/checkout@v4
      - name: Use Node.js version ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node_version}}
      - name: Install packages
        run: npm run install-1
      - name: WORKSPACE
        run: echo ${{github.workspace}}
      - name: ENV JSON PARSING
        run: echo ${{toJSON(env.OS_TYPES)}}
      - name: LINT FIX
        working-directory: ./1-github
        run: | # expression aids in multiline yaml string
          echo fixing lint
          npm run lint:fix
      - name: LINT CHECK
        working-directory: ./1-github
        run: npm run lint:check
      - name: BUILD
        working-directory: ./1-github
        run: npm run build
      # - name: CREATE RELEASE TAG
      # uses: softprops/action-gh-release@v1
      ## run only if githb.rf is referencing to tags.
      ##if: startsWith(github.ref, 'refs/tags/')
      # with:
      #   tag_name: "v1.0.1"
      #   token: ${{secrets.GITHUB_TOKEN}}
  job-release:
    needs: job-deploy-without-code-splitting
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout using actions/checkout@v4
        uses: actions/checkout@v4
      - name: Node.js
        uses: actions/setup-node@v3
      - name: Install packages
        run: npm run install-1
      - name: BUILD
        working-directory: ./1-github
        run: npm run build
      - name: CREATE RELEASE TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
